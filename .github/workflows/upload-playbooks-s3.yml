name: Upload Ansible Playbook to S3

on:
  push:
    branches:
      - yannick  # Trigger the workflow when pushing to the main branch
    paths:
      - ansible-playbooks/harshicorp/**

jobs:
  upload_playbook:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install AWS CLI v2
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install --update

    - name: Verify file paths
       run: |
         pwd
         ls -l ../../ansible-playbooks/harshicorp/
         echo "test"


    - name: Extract current version from playbook_version.txt
      id: extract_version
      run: |
        echo "Reading version and description..."
        PLAYBOOK_VERSION=$(grep '^version:' playbook_version.txt | cut -d ' ' -f 2)
        DESCRIPTION=$(grep '^description:' playbook_version.txt | cut -d '"' -f 2)
        echo "Playbook Version: $PLAYBOOK_VERSION"
        echo "Description: $DESCRIPTION"
        echo "::set-output name=playbook_version::$PLAYBOOK_VERSION"
        echo "::set-output name=description::$DESCRIPTION"

    - name: Get the current version from S3 (if any)
      id: get_s3_version
      run: |
        echo "Checking version in S3..."
        aws s3 cp s3://ansible-playbooks-yan/playbook_version.txt ./s3_playbook_version.txt || echo "No existing version in S3"
        if [ -f "./s3_playbook_version.txt" ]; then
          S3_PLAYBOOK_VERSION=$(grep '^version:' s3_playbook_version.txt | cut -d ' ' -f 2)
          echo "S3 Playbook Version: $S3_PLAYBOOK_VERSION"
          echo "::set-output name=s3_playbook_version::$S3_PLAYBOOK_VERSION"
        else
          echo "No version file in S3, treating it as a new upload."
          echo "::set-output name=s3_playbook_version::0.0.0"
        fi

    - name: Compare versions and decide to upload or not
      id: version_check
      run: |
        PLAYBOOK_VERSION=${{ steps.extract_version.outputs.playbook_version }}
        S3_PLAYBOOK_VERSION=${{ steps.get_s3_version.outputs.s3_playbook_version }}
        echo "Local version: $PLAYBOOK_VERSION, S3 version: $S3_PLAYBOOK_VERSION"
        if [ "$PLAYBOOK_VERSION" != "$S3_PLAYBOOK_VERSION" ]; then
          echo "Newer version detected, proceeding with upload."
          echo "::set-output name=should_upload::true"
        else
          echo "No newer version detected. Skipping upload."
          echo "::set-output name=should_upload::false"
        fi

    - name: Upload playbook and version to S3
      if: steps.version_check.outputs.should_upload == 'true'
      run: |
        echo "Uploading playbook and version file to S3..."
        aws s3 cp ../../ansible-playbooks/harshicorp/playbook_version.txt s3://ansible-playbooks-yan/playbook_version.txt
        aws s3 cp ../../ansible-playbooks/harshicorp/harshircorp-repo.yml s3://ansible-playbooks-yan/harshircorp-repo.yml
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEBUG: 1







