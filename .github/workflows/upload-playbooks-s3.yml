name: Upload Ansible Playbooks to S3

on:
  push:
    branches:
      - main
    paths:
      - 'ansible-playbooks/**.yaml'  # Trigger on changes to playbooks in the 'playbooks' directory

jobs:
  upload-playbooks:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2  # Change to your desired region

      - name: Loop through playbooks and check versions
        run: |
          # Set the S3 bucket name
          S3_BUCKET="ansible-playbooks-yannick"

          # Loop through all playbook files in the playbooks directory
          for playbook in ansible-playbooks/*.yml; do
            echo "Checking version for $playbook"

            # Extract the current version from the local playbook file
            current_version=$(grep 'playbook_version' "$playbook" | cut -d '"' -f2)

            # Define the corresponding playbook file in S3
            s3_playbook="s3://$S3_BUCKET/$playbook"

            # Download the playbook from S3 if it exists, or create an empty file if it doesn't
            aws s3 cp "$s3_playbook" playbook_s3.yml || touch playbook_s3.yml

            # Extract the version from the playbook in S3 (if it exists)
            if grep -q 'playbook_version' playbook_s3.yml; then
              s3_version=$(grep 'playbook_version' playbook_s3.yml | cut -d '"' -f2)
            else
              s3_version="none"
            fi

            # Print the current and S3 versions for debugging
            echo "Local version: $current_version, S3 version: $s3_version"

            # Upload the playbook to S3 if the version has changed
            if [ "$current_version" != "$s3_version" ]; then
              echo "Version has changed. Uploading $playbook to S3..."
              aws s3 cp "$playbook" "$s3_playbook"
            else
              echo "Version is the same. No upload needed for $playbook."
            fi

            # Clean up temporary file
            rm -f playbook_s3.yml
          done


